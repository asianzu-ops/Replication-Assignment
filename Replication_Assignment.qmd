---
title: "Replication-Assignment"
format: html
editor: visual
---

#Data Analysis Replication Assignment

#Step 1:Original Paper and replication Goal

```{r}

#Goal of the Paper:
  
#The study conducted by Sandel et al.(2021) aimed to investigate how social network structure influences the transmission of a respiratory disease outbreak among wild chimpanzees. The study sought to determine whether individual social connections predicted exposure to infection.

#Data Set Used:
#The study was conducted on a chimpanzee group inKibale National Park, Uganda.

#Researchers collected behavioral and epidemiological data from 40 adult and adolescent male chimpanzees during a respiratory disease outbreak.

#Symptoms such as coughing and rhinorrhea were recorded to identify infected individuals.

#Analyses:
  
#Social Network Analysis: Constructed networks based on chimpanzee associations to identify individual connectivity.

#Epidemiological Modeling: Assessed the relationship between an individual’s social connections and the likelihood of infection.

#Statistical Tests: Used regression models to test whether more socially connected individuals had higher chances of exposure to infection.


#Analyses to be conducted.

#Descriptive Analysis to Replicate:
#Social Network Analysis:compute basic network metrics such as the number of connections.

#Regression Analysis: model the relationship between social connectivity and infection likelihood using logistic regression.


```

#Step 2: Loading the data files

```{r}
#This section of code includes files and relevant libraries that will be used to conduct the analysis.

#setting working directory
setwd("C:\\Users\\Asianzu Blessing\\Documents\\Practice R\\practice\\Replication-Assignment\\")

#raw data
s_raw <- readRDS("sicknessRawData.rds")
p_raw <- readRDS("allRawProx5Data.rds")
i_raw <- readRDS("totalNumberOfScansPerIndividual.rds")

head(s_raw)
head(p_raw)
head(i_raw)

colnames(s_raw)
colnames(p_raw)
colnames(i_raw)


#Fig share Data used for analysis
f <- "Data/5m network adjacency matrix.csv"
h <- "Data/individual chimpanzee data.csv"

d <- read.csv(f, header = TRUE)
p <- read.csv(h, header = TRUE)


head(d)
head(p)

colnames(d)
colnames(p)

```

#Step 3:Social network Plot

```{r}

#This script uses igraph and dplyr packages to visualize the proximity network based on the symptomatic status of the study idividuals(nodes). The igraph package is used to create and plot the network graph, where the edges represent proximity data, and the vertices are colored based on whether a chimpanzee is symptomatic (red) or not (green). The dplyr package  is used in the data manipulation tasks. The network visualization is generated by using igraph's functions to define a layout and adjust visual settings like vertex size, label size, and edge width, providing a clear representation of the proximity network and its relation to clinical status.

library(tidyverse)
library(igraph)

# Load adjacency matrix (assumes headers are chimp names and rownames are also chimp names)
adj_matrix <- read.csv("Data/5m network adjacency matrix.csv", row.names = 1, check.names = FALSE)

# Confirm it's a matrix
print(dim(adj_matrix))
print(head(rownames(adj_matrix)))


# Convert to matrix (just in case)
adj_matrix <- as.matrix(adj_matrix)

# Build the igraph object
g <- graph_from_adjacency_matrix(adj_matrix, mode = "undirected", weighted = TRUE, diag = FALSE)

# Confirm vertices are loaded
print(V(g)$name)

# Load chimp metadata
chimp_data <- read.csv("Data/individual chimpanzee data.csv")

# Match symptomatic status to vertex names
symptom_status <- chimp_data$symptomatic[match(V(g)$name, chimp_data$identity)]

# Check for NAs (means unmatched names)
print(any(is.na(symptom_status)))  # Should be FALSE

# Assign vertex color based on symptomatic status
V(g)$color <- ifelse(symptom_status == 1, "red", "green")

# Optional layout
layout_matrix <- layout_with_fr(g)

# Plot the network
plot(g, 
     layout = layout_matrix,
     vertex.size = 15, 
     vertex.label.cex = 0.7,
     edge.width = E(g)$weight * 10,
     vertex.color = V(g)$color,
     main = "Proximity Network with Symptomatic Status")


# Ensure adjacency matrix corresponds to the correct number of individuals (40)
adj_matrix <- adj_matrix[1:40, 1:40]


```

#Step 4:Calculating and visualising mean weighted shortest path

```{r}

#Here I analyze the proximity of symptomatic chimpanzees in the network by calculating the mean weighted shortest path from each node to the nearest symptomatic individual. The igraph package used to create the graph with graph_from_data_frame(). V(g)$symptomatic assigns the symptomatic status to each node, and the distances() function computes the shortest path between nodes. A permutation test is performed by shuffling the symptomatic status 1000 times to create a null distribution, and the observed mean path length is compared to this null distribution. A p-value calculated to assess the significance of the observed path length. The null distribution is visualized using a histogram with the observed mean path length.


# Define the sick individuals based on the 'symptomatic' column
sick_individuals <- chimp_data$identity[chimp_data$symptomatic == 1]

# Check the number of sick individuals
cat("Number of symptomatic individuals:", length(sick_individuals), "\n")

# Create a subgraph for the sick individuals
sick_subgraph <- induced_subgraph(g, vids = sick_individuals)

# Calculate the mean weighted path length for sick individuals
mean_sick_path_length <- mean_distance(sick_subgraph, weights = E(sick_subgraph)$weight, directed = FALSE)

# Output the result for the sick individuals
cat("Mean Path Length for sick individuals:", mean_sick_path_length, "\n")

# Perform a null hypothesis simulation by randomly shuffling the symptomatic individuals
num_iterations <- 1000
null_distribution <- numeric(num_iterations)

for (i in 1:num_iterations) {
  # Randomly shuffle the symptomatic individuals
  random_sick_individuals <- sample(V(g)$name, length(sick_individuals))
  
  # Create a subgraph for the shuffled individuals
  random_sick_subgraph <- induced_subgraph(g, vids = random_sick_individuals)
  
  # Calculate the mean path length for the shuffled subgraph
  null_distribution[i] <- mean_distance(random_sick_subgraph, weights = E(random_sick_subgraph)$weight, directed = FALSE)
}

# Calculate the p-value
p_value <- sum(null_distribution <= mean_sick_path_length) / num_iterations
cat("P-value:", p_value, "\n")



#The observed mean path length to the nearest symptomatic individual in my analysis was 0.012, with a p-value of 0.177 from 1,000 randomizations. Compared to the original study which reported a mean weighted path length of 15.04 and a p-value of 0.014, my result shows a significant difference in the mean values. However,both analyses indicate a significant relationship between the network topology and the proximity of symptomatic individuals, with mine being less significant than the original study. 

#This difference in the values I got and that of the original analysis could probably be due to edge weighting or the method used to calculate path lengths (mean vs. weighted).


```

#Step 5:Logistic regression with the predictor variables

```{r}

#This code uses logistic regression to examine the relationship between node strength centrality and the probability of respiratory symptoms (symptomatic status). The glm() function from R fits the logistic regression model, with summary() providing model coefficients and p-values. The model predicts the probability of symptoms based on node strength centrality. ggplot2, used to visualize the data and the fitted logistic curve. The geom_point() function creates a scatter plot of the data, while geom_smooth() adds the fitted logistic curve. The plot highlights the relationship between node strength centrality and the probability of infection. Finally, the script prints model coefficients and p-values to assess the statistical significance of the predictors.


library(ggplot2)

#Defining the model 
model <- glm(symptomatic ~ strength.centrality + age + dominance.score , data = chimp_data, family = binomial)

summary(model)


#data for logistic regression
network_data <- data.frame(node_strength = chimp_data$strength.centrality,age = chimp_data$age,symptomatic = chimp_data$symptomatic, dominance.score=chimp_data$dominance.score)


# Fitting the logistic regression model
log_reg_model <- glm(symptomatic ~ node_strength, + age + dominance.score, data = network_data, family = binomial)

summary(log_reg_model)


network_data$predicted_prob <- predict(log_reg_model, type = "response")

# Plotting fitted regression curve
ggplot(network_data, aes(x = node_strength, y = symptomatic)) +
  geom_point(alpha = 0.5) +  # Scatter plot of the actual data
  geom_smooth(method = "glm", method.args = list(family = "binomial"), 
              se = FALSE, color = "red") +  # Fitted logistic curve
  labs(x = "Node Strength Centrality", 
       y = "Probability of Respiratory Symtpoms", 
       title = "Strength Centrality Predicts Clinical Signs of Infection") +
  theme_minimal()


cat("Model Coefficients:\n")
print(coef(log_reg_model))
cat("\nP-values:\n")
print(summary(log_reg_model)$coefficients[, 4])



#The logistic regression model including strength centrality, age, and dominance score shows that strength centrality significantly predicts the likelihood of symptomatic infection (β = 9.47, P = 0.0221). Age (β = -0.031, P = 0.5147) and dominance score (β = -1.14, P = 0.5668) were not significant predictors. The model had a residual deviance of 36.663 on 36 degrees of freedom, and an AIC of 44.663, suggesting a reasonable fit.

#A simpler model using only node strength also found a strong positive association with symptomatic infection (β = 6.41, P < 2e-16), with an AIC of 930.02. This confirms that individuals with higher centrality in the network are more likely to exhibit symptoms, consistent with patterns observed in the original permutation-based analysis.

#In both models, age and dominance score do not directly predict symptom expression, aligning with prior findings that their influence may be indirect, possibly via effects on social connectivity.



```

#Step 6:Permutation-based testing for the logistic model

```{r}

#This chunk uses logistic regression to examine whether social network metrics (strength centrality, eigenvector centrality, flow betweenness), age, and dominance score predict symptomatic status in a suspected disease outbreak. The glm() function from the MASS package fits the logistic model. To ensure robustness, the permute_regression() function performs a permutation test, randomly shuffling the response variable (symptomatic) 30,000 times and refitting the model. This generates a null distribution of coefficients, allowing empirical p-values to assess significance. The apply() function is used to calculate p-values.


#Load library
library(MASS) 

# Defining the logistic regression model
log_reg_model <- glm(symptomatic ~ strength.centrality + eigenvector.centrality + 
                      flow.betweenness + age + dominance.score,
                     data = chimp_data, family = binomial)

permute_regression <- function(data, response_var, predictor_vars, n_perm = 1000) {
  observed_coefficients <- coef(glm(as.formula(paste(response_var, "~", paste(predictor_vars, collapse = "+"))),
                                    data = data, family = binomial))
  
  permuted_coefficients <- matrix(NA, nrow = n_perm, ncol = length(observed_coefficients))
  
  for (i in 1:n_perm) {
   
    permuted_data <- data
    permuted_data[[response_var]] <- sample(permuted_data[[response_var]])
    
   
    perm_model <- glm(as.formula(paste(response_var, "~", paste(predictor_vars, collapse = "+"))),
                      data = permuted_data, family = binomial)
    
   
    
    permuted_coefficients[i, ] <- coef(perm_model)
  }
  
  return(list(observed = observed_coefficients, permuted = permuted_coefficients))
}

# Run the permutation-based regression
response_variable <- "symptomatic"
predictors <- c("strength.centrality", "eigenvector.centrality", "flow.betweenness", 
                "age", "dominance.score")  



perm <- permute_regression(chimp_data, response_variable, predictors, n_perm = 30000)


#Calculate p-values based on the observed coefficients and permuted coefficients
p_values <- apply(perm$permuted, 2, function(coef_column) {
  mean(abs(coef_column) >= abs(perm$observed))
})

#coefficients and p-values
cat("Observed Coefficients:\n")
print(perm$observed)

cat("\nP-values based on permutation:\n")
print(p_values)


```

#Step7:Checking for multicollinearity

```{r}

#running a generalised linear model to check for multicollinearity for all the predictor variables for the analyses of the original and the replication task

library(car)

log_reg_model <- glm(symptomatic ~ strength.centrality + eigenvector.centrality + 
                      flow.betweenness + age + dominance.score, 
                     data = chimp_data, family = binomial)

# Calculate VIF
vif_result <- vif(log_reg_model)

print(vif_result)


#The specific VIF for the predictor variables of the original paper were not reported but they were all less than 2, which aligns with my varianca inflation factors, showing almost no collinearity except for strength centrality vif is slightly above 2 which is slightly above 2 as in the original 
```

#Step 8:Discussion

```{r}

#Overall, the findings from my analysis and the original study share are in highlighting social network position, particularly strength centrality, in influencing the likelihood of chimpanzees exhibiting respiratory infection signs. Both analyses suggest that chimpanzee central positions in the social network were more likely to show clinical signs of infection, while age and dominance rank had minimal direct effects on the probability of exhibiting these clinical signs. 

#However, a key difference between my analysis and the original study lies in the statistical significance of the findings. In the original study, strength centrality showed a significant correlation with infection likelihood, while rank and age had negligible effects. In my  analysis, while I have a similar trend, the relationships between network centrality and infection likelihood did not achieve statistical significance. This differece could be attributed to the statistical models that I used to run the analysis. 


#Challenges: I failed to create a group shade for the networks based on neighborhood as it appears in the original study's network plot. Secondly, I tried using the same logistic regression package (pbr.logistic used in the original study) but I failed to get it loaded even after installing pbr in R so that could have altered the analysis, I am not sure. 


```

#Step 9:Original Study images

```{r}

#Images here consist of visualisation from the original paper

knitr::include_graphics("Images/Fitted logistic regession HTML.webp")

knitr::include_graphics("Images/Network plot_Fig2_HTML.webp")


```
